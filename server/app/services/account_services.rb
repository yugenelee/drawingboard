module AccountServices

  # PROVIDER_POLICIES overrides POLICIES

  POLICIES = {
      require_password: true,
      require_email_confirmation: true
  }
  PROVIDER_POLICIES = {
      local: {require_email_confirmation: true},
      linkedin: {}
  }
  POLICIES.freeze
  PROVIDER_POLICIES.freeze

  USER_TYPES = %w[Freelancer Employer]

  SUCCESS = 'SUCCESS'
  FAILED = 'FAILED'

  UNDEFINED_PROVIDER = 'UNDEFINED_PROVIDER'
  USER_NOT_FOUND = 'USER_NOT_FOUND'
  USER_PENDING_CONFIRMATION = 'USER_PENDING_CONFIRMATION'
  USER_BLOCKED = 'USER_BLOCKED'
  USER_TYPE_NOT_ALLOWED = 'USER_TYPE_NOT_ALLOWED'
  PASSWORD_REQUIRED = 'PASSWORD_REQUIRED'
  INVALID_PASSWORD_ON_REGISTRATION = 'INVALID_PASSWORD_ON_REGISTRATION'
  INVALID_PASSWORD_ON_LOGIN = 'INVALID_PASSWORD_ON_LOGIN'

  SESSION_NOT_FOUND = 'SESSION_NOT_FOUND'
  TOKEN_NOT_FOUND = 'TOKEN_NOT_FOUND'
  TOKEN_EXPIRED = 'TOKEN_EXPIRED'
  DIFFERENT_IP_ADDRESS = 'DIFFERENT_IP_ADDRESS'
  EMAIL_ALREADY_CONFIRMED = 'EMAIL_ALREADY_CONFIRMED'
  PURPOSE_NOT_FOUND = 'PURPOSE_NOT_FOUND'
  PAYLOAD_NOT_FOUND = 'PAYLOAD_NOT_FOUND'

  # Purposes
  ACTIVATE_USER = 'ACTIVATE_USER'
  RESET_PASSWORD = 'RESET_PASSWORD'

  ALREADY_REGISTERED = 'ALREADY_REGISTERED'
end